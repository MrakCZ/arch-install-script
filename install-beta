#!/bin/bash

# Načtení informací o disku
echo "Detekce dostupných disků:"
available_disks=($(lsblk -dno NAME,TYPE | awk '$2 == "disk" {print $1}'))
disk_count=${#available_disks[@]}

if ((disk_count == 0)); then
    echo "Nenalezeny žádné disky. Ukončuji skript."
    exit 1
fi

# Výpis očíslovaného seznamu disků
for i in "${!available_disks[@]}"; do
    disk="/dev/${available_disks[i]}"
    size=$(lsblk -dno SIZE "$disk")
    echo "$((i+1)). $disk ($size)"
done

# Dotaz na výběr disku
echo
read -p "Vyberte číslo disku pro instalaci (1-$disk_count): " disk_number

# Kontrola, zda číslo odpovídá dostupnému disku
if [[ ! "$disk_number" =~ ^[0-9]+$ ]] || ((disk_number < 1 || disk_number > disk_count)); then
    echo "Neplatný výběr. Ukončuji skript."
    exit 1
fi

# Výběr disku
selected_disk="/dev/${available_disks[disk_number-1]}"
echo "Vybrali jste disk: $selected_disk"

# Určení názvů oddílů podle typu disku
if [[ "${available_disks[disk_number-1]}" == nvme* ]]; then
    part1="${selected_disk}p1"
    part2="${selected_disk}p2"
else
    part1="${selected_disk}1"
    part2="${selected_disk}2"
fi

# Další konfigurace uživatele a systému
echo "------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------"
echo -e "\nZadejte jméno nového uživatele:\n"
read user

echo -e "\nZadejte heslo pro $user:\n"
read -s uspw

echo -e "\nZadejte heslo pro root uživatele:\n"
read -s rtpw

echo -e "\nNázev zařízení (hostname):\n"
read host

echo -e "\nDoména (example.cz):\n"
read domain

# Stáhnutí seznamu zrcadel pro všechny země
mirror_list=$(curl -s https://archlinux.org/mirrorlist/all/https/)

# Přejdeme na řádky, které začínají až po "## Worldwide", ale včetně tohoto řádku
countries=$(echo "$mirror_list" | sed '1,/## Worldwide/ d' | grep -oP '^## \K.*' | sort)

# Přidáme řádek "Worldwide" zpět na začátek
countries="Worldwide"$'\n'"$countries"

# Počet dostupných zemí
country_count=$(echo "$countries" | wc -l)

# Výpis dostupných zemí s číslováním
echo "Dostupné země pro Arch Linux zrcadla:"
echo "$countries" | nl

# Uživatelský vstup pro výběr země
echo
read -p "Zadejte číslo země (1-$country_count): " country_choice

# Ověření platného výběru
if [[ "$country_choice" =~ ^[0-9]+$ ]] && ((country_choice >= 1 && country_choice <= country_count)); then
    selected_country=$(echo "$countries" | sed -n "${country_choice}p")
    echo "Vybraná země: $selected_country"
else
    echo "Neplatný výběr. Ukončuji skript."
    exit 1
fi


# Načtení dostupných regionů a časových zón
regions=($(ls -1 /usr/share/zoneinfo | grep -E '^(Africa|America|Antarctica|Asia|Australia|Europe|Indian|Pacific)$'))

# Počet dostupných regionů
region_count=${#regions[@]}

# Pokud není žádný region, ukončíme skript
if ((region_count == 0)); then
    echo "Nenalezena žádná časová zóna. Ukončuji skript."
    exit 1
fi

# Výpis dostupných regionů
echo "Dostupné regiony:"
for i in "${!regions[@]}"; do
    echo "$((i+1)). ${regions[i]}"
done

# Dotaz na výběr regionu
echo
read -p "Vyberte číslo regionu (1-$region_count) nebo zadejte část názvu pro vyhledávání: " region_input

# Pokud uživatel zadá číslo
if [[ "$region_input" =~ ^[0-9]+$ ]] && ((region_input >= 1 && region_input <= region_count)); then
    selected_region="${regions[region_input-1]}"
else
    # Pokud zadá část názvu regionu pro vyhledávání
    selected_region=$(echo "${regions[@]}" | grep -i "$region_input" | head -n 1)
    if [[ -z "$selected_region" ]]; then
        echo "Region nenalezen. Ukončuji skript."
        exit 1
    fi
    echo "Vybraný region: $selected_region"
fi

# Načtení dostupných časových zón pro vybraný region
zones=($(ls -1 "/usr/share/zoneinfo/$selected_region"))
zone_count=${#zones[@]}

# Pokud nejsou žádné časové zóny pro vybraný region
if ((zone_count == 0)); then
    echo "Pro vybraný region '$selected_region' nejsou dostupné žádné časové zóny. Ukončuji skript."
    exit 1
fi

# Výpis dostupných časových zón
echo "Dostupné časové zóny pro region '$selected_region':"
for i in "${!zones[@]}"; do
    echo "$((i+1)). ${zones[i]}"
done

# Dotaz na výběr časové zóny
echo
read -p "Vyberte číslo časové zóny (1-$zone_count): " zone_number

if [[ ! "$zone_number" =~ ^[0-9]+$ ]] || ((zone_number < 1 || zone_number > zone_count)); then
    echo "Neplatný výběr časové zóny. Ukončuji skript."
    exit 1
fi

selected_zone="$selected_region/${zones[zone_number-1]}"
echo "Vybraná časová zóna: $selected_zone"

# Načtení síťových rozhraní
echo "Detekce dostupných síťových rozhraní:"
interfaces=($(ls -1 /sys/class/net))
iface_count=${#interfaces[@]}

if ((iface_count == 0)); then
    echo "Nenalezena žádná síťová rozhraní. Ukončuji skript."
    exit 1
fi

# Výpis očíslovaného seznamu síťových rozhraní
for i in "${!interfaces[@]}"; do
    echo "$((i+1)). ${interfaces[i]}"
done

# Dotaz na výběr rozhraní
echo
read -p "Vyberte číslo rozhraní pro konfiguraci (1-$iface_count): " iface_number

# Kontrola, zda číslo odpovídá dostupnému rozhraní
if [[ ! "$iface_number" =~ ^[0-9]+$ ]] || ((iface_number < 1 || iface_number > iface_count)); then
    echo "Neplatný výběr. Ukončuji skript."
    exit 1
fi

# Výběr rozhraní
iname="${interfaces[iface_number-1]}"
echo "Vybrali jste rozhraní: $iname"

# Síťová konfigurace
echo -e "\nChcete použít DHCP pro síť? (y/n)"
read -r dhcp_choice

if [[ "$dhcp_choice" =~ ^[Yy]$ ]]; then
    dhcp=true
    ipv4_address=""
    ipv4_gateway=""
    ipv6_address=""
    ipv6_gateway=""
else
    dhcp=false
    echo -e "Zadejte IPv4 adresu a masku (0.0.0.0/0):"
    read -r ipv4_address
    echo -e "Zadejte bránu pro IPv4:"
    read -r ipv4_gateway
    echo -e "Zadejte IPv6 adresu a masku (0::/0) (nevyplňujte pro vynechání):"
    read -r ipv6_address
    if [[ -n "$ipv6_address" ]]; then
        echo -e "Zadejte bránu pro IPv6:"
        read -r ipv6_gateway
    else
        ipv6_gateway=""
    fi
fi

# Dotazy na DNS
echo -e "\nChcete nastavit DNS servery? (y/n)"
read -r dns_choice

if [[ "$dns_choice" =~ ^[Yy]$ ]]; then
    echo -e "Zadejte DNS server pro IPv4:"
    read -r ipv4_dns
    echo -e "Zadejte DNS server pro IPv6 (nevyplňujte pro vynechání):"
    read -r ipv6_dns
else
    ipv4_dns=""
    ipv6_dns=""
fi

# Dotaz na DNS server (např. AdGuard, Pi-hole)
echo -e "\nBude tento server poskytovat DNS služby (např. AdGuard, Pi-hole)? (y/n)"
read -r dns_server_choice

# Dotaz na instalaci yay-bin (AUR helper)
echo -e "\nChcete nainstalovat yay-bin (AUR helper) pro instalaci balíčků z AUR? (y/n)"
read -r install_yay

# Uložení všech informací do jednoho konfiguračního souboru
cat <<EOF > ./confidentials
# Disková konfigurace
selected_disk=$selected_disk
part1=$part1
part2=$part2

# Uživatelská konfigurace
user=$user
uspw=$uspw
rtpw=$rtpw
host=$host
domain=$domain
country=$selected_country
tmzn=$selected_zone

# Síťová konfigurace
iname=$iname
dhcp=$dhcp
ipv4_address=$ipv4_address
ipv4_gateway=$ipv4_gateway
ipv6_address=$ipv6_address
ipv6_gateway=$ipv6_gateway
ipv4_dns=$ipv4_dns
ipv6_dns=$ipv6_dns

# Další volby
dns_server_choice=$dns_server_choice
install_yay=$install_yay
EOF

echo -e "\nKonfigurace uložena. Začínáme s instalací...\n"
echo "----------------------------------------------------------------------------------"

# Mazání tabulky oddílů
echo "Mazání tabulky oddílů na $selected_disk..."
wipefs --all "$selected_disk"

# Vytvoření oddílů
echo "Vytváření oddílů..."
sgdisk -n 0:0:+512M -t 0:ef00 "$selected_disk"  # EFI oddíl
sgdisk -n 0:0:0 -t 0:8300 "$selected_disk"      # Linux oddíl

# Formátování oddílů
echo "Formátování oddílů..."
mkfs.fat -F 32 "$part1"
mkfs.ext4 -F "$part2"

echo "Oddíly byly úspěšně vytvořeny a naformátovány."
echo "Hotovo."

# Nastavení NTP
timedatectl set-ntp true

# Nastavení pacman konfigurace
sed -i 's/#Color/Color/; s/#ParallelDownloads/ParallelDownloads/; s/#\[multilib\]/\[multilib\]/; /\[multilib\]/{n;s/#Include/Include/}' /etc/pacman.conf

# Mount oddílů
echo "Připojuji oddíly..."
mount "$part2" /mnt
mount --mkdir "$part1" /mnt/EFI

echo "Oddíly byly úspěšně připojeny."

# Spuštění reflectoru pro vybranou zemi
reflector --country "$country" --latest 5 --sort rate --save /etc/pacman.d/mirrorlist
echo "Mirrorlist byl aktualizován pro zemi: $country"

# Instalace balíčků
pacman-key --init
pacman-key --populate archlinux
pacman -Sy --noconfirm -S archlinux-keyring
pacstrap /mnt $(cat pkgs | sed 's/#.*$//' | tr '\n' ' ')

# Generování FSTab
genfstab -U /mnt >> /mnt/etc/fstab
sed -i 's/relatime/relatime,discard/g' /mnt/etc/fstab

# Nastavení Pacman konfigurace a aktualizací (pro nový systém)
sed -i 's/#Color/Color/; s/#ParallelDownloads/ParallelDownloads/; s/#\[multilib\]/\[multilib\]/; /\[multilib\]/{n;s/#Include/Include/}' /mnt/etc/pacman.conf
reflector -c "$country" -a 12 -p https --sort rate --save /mnt/etc/pacman.d/mirrorlist
arch-chroot /mnt pacman -Syyu --noconfirm

# Nastavení časové zóny na $tmzn...
ln -sf "/usr/share/zoneinfo/$tmzn" /mnt/etc/localtime
echo "Časová zóna byla nastavena na $tmzn."

arch-chroot /mnt hwclock --systohc

# Konfigurace vconsole...
echo -e "KEYMAP=cz-qwertz\nFONT=lat2-16\nFONT_MAP=8859-2" > /mnt/etc/vconsole.conf

# Konfigurace Locale...
sed -i 's/#cs_CZ.UTF-8/cs_CZ.UTF-8/; s/#en_US.UTF-8/en_US.UTF-8/' /mnt/etc/locale.gen
arch-chroot /mnt locale-gen
echo -e "LANG=cs_CZ.UTF-8" > /mnt/etc/locale.conf

# sed -i 's/Current=/Current=breeze/' /mnt/usr/lib/sddm/sddm.conf.d/default.conf

# Nastavení hostname a domény...
echo "$host" > /mnt/etc/hostname
cat <<EOF > /mnt/etc/hosts
127.0.0.1   localhost $host $host.$domain
::1         localhost $host $host.$domain
127.0.1.1   $host.$domain $host
EOF

# Konfigurace síťového rozhraní $iname...
network_config_file="/mnt/etc/systemd/network/10-$iname.network"
cat <<EOF > $network_config_file
[Match]
Name=$iname

[Network]
EOF
if [[ "$dhcp" == "true" ]]; then
    echo "DHCP=yes" >> $network_config_file
else
    echo "Address=$ipv4_address" >> $network_config_file
    echo "Gateway=$ipv4_gateway" >> $network_config_file
    [[ -n "$ipv6_address" ]] && echo "Address=$ipv6_address" >> $network_config_file
    [[ -n "$ipv6_gateway" ]] && echo "Gateway=$ipv6_gateway" >> $network_config_file
fi

if [[ -n "$ipv4_dns" || -n "$ipv6_dns" ]]; then
    echo "DNS=$ipv4_dns" >> $network_config_file
    [[ -n "$ipv6_dns" ]] && echo "DNS=$ipv6_dns" >> $network_config_file
fi

# Nastavení DNS služeb...
resolved_conf="/mnt/etc/systemd/resolved.conf"

# Vytvoření symbolického odkazu
ln -sf /run/systemd/resolve/stub-resolv.conf /mnt/etc/resolv.conf 

if [[ "$dns_server_choice" =~ ^[Yy]$ ]]; then
    # Přepsání /etc/resolv.conf vlastními DNS servery
    echo -e "nameserver $ipv4_dns" > /mnt/etc/resolv.conf
    [[ -n "$ipv6_dns" ]] && echo "nameserver $ipv6_dns" >> /mnt/etc/resolv.conf
    
    # Úprava resolved.conf pro vypnutí DNSStubListener
    sed -i 's/#DNSStubListener=yes/DNSStubListener=no/' $resolved_conf
fi

if [[ -n "$ipv4_dns" || -n "$ipv6_dns" ]]; then
    # Ošetření proměnných pro případ prázdné IPv4 nebo IPv6
    dns_values="${ipv4_dns}${ipv4_dns:+ }${ipv6_dns}"
    
    # Použití dvojitých uvozovek pro správné nahrazení proměnných
    sed -i "s|#DNS=|DNS=$dns_values|" "$resolved_conf"
fi

# Nastavení hesla pro root...
echo "root:$rtpw" | arch-chroot /mnt chpasswd

# Vytváření uživatele $user a nastavení shellu na /bin/bash...
arch-chroot /mnt useradd -m -G wheel -s /bin/bash $user
echo "$user:$uspw" | arch-chroot /mnt chpasswd
echo -e "%wheel ALL=(ALL) ALL \n$user ALL=NOPASSWD: ALL \n" > /mnt/etc/sudoers.d/00_nopasswd

# Instalace yay-bin (AUR helper) pokud požadováno...
if [[ "$install_yay" =~ ^[Yy]$ ]]; then
    arch-chroot /mnt su - $user -c "git clone https://aur.archlinux.org/yay-bin.git"
    arch-chroot /mnt su - $user -c "cd yay-bin && makepkg -si --noconfirm"
fi

# Zapnutí systemd služeb...
arch-chroot /mnt systemctl enable systemd-networkd systemd-resolved qemu-guest-agent.service sshd # sddm NetworkManager

# Generování initramfs pro linux-lts jádro...
arch-chroot /mnt mkinitcpio -P linux-lts

# Konfigurace Bootloaderu (GRUB)...
arch-chroot /mnt grub-install --target=x86_64-efi --efi-directory=/EFI --bootloader-id=GRUB
arch-chroot /mnt grub-mkconfig -o /boot/grub/grub.cfg

# Odstraňování dočasných souborů...
rm -f ./confidentials

# Odpojení
umount -a

# Restart systému
echo -e "\nInstalace dokončena. Systém se restartuje za 5 vteřin..."
sleep 5
reboot
